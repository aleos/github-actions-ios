name: üöÄ Distribute Workflow
on: push

env:
  DEVELOPER_DIR: /Applications/Xcode_14.0.app/Contents/Developer

jobs:
  distribute:
    name: üöÄ Distribute
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test pass variables
        run: |
          export TEST_VAR="¬Ø\_(„ÉÑ)_/¬Ø"
      - name: USE TEST_VAR
        run: |
          echo ${TEST_VAR}
      - name: üìú Import certificate
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSWORD }}
      - name: üì± Install provisioning profile
        env:
          ADHOC_PROVISIONING_PROFILE_BASE64: ${{ secrets.ADHOC_PROVISIONING_PROFILE_BASE64 }}
        run: |
          # create variables
          PROVISIONING_PROFILE_FILENAME=App_Ad_hoc.mobileprovision
          PROVISIONING_PROFILE_PATH=${RUNNER_TEMP}/${PROVISIONING_PROFILE_FILENAME}

          # import provisioning profile from secrets
          echo -n "${ADHOC_PROVISIONING_PROFILE_BASE64}" | base64 --decode --output ${PROVISIONING_PROFILE_PATH}

          # apply provisioning profile
          PROVISIONING_PROFILE_UUID=$(grep UUID -A1 -a ${PROVISIONING_PROFILE_PATH} | grep -io "[-A-Z0-9]\{36\}")
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ${PROVISIONING_PROFILE_PATH} ~/Library/MobileDevice/Provisioning\ Profiles/${PROVISIONING_PROFILE_UUID}.mobileprovision
      - name: üèõ Archive
        run: | # xcodebuild [-project <projectname>] -scheme <schemeName> [-destination <destinationspecifier>]... [-configuration <configurationname>] [-arch <architecture>]... [-sdk [<sdkname>|<sdkpath>]] [-showBuildSettings [-json]] [-showdestinations] [<buildsetting>=<value>]... [<buildaction>]...
          xcodebuild \
            -project App.xcodeproj \
            -scheme App \
            -destination 'generic/platform=iOS' \
            -archivePath ./build/App.xcarchive \
            archive
      - name: üì¶ Export
        run: | # xcodebuild -exportArchive -archivePath <xcarchivepath> [-exportPath <destinationpath>] -exportOptionsPlist <plistpath>
          xcodebuild \
            -exportArchive \
            -archivePath ./build/App.xcarchive \
            -exportPath ./build \
            -exportOptionsPlist ExportOptions.plist
      - name: ü¶ä Upload to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}
        run: |
          # Install Firebase CLI (https://firebase.google.com/docs/cli?authuser=1#mac-linux-auto-script)
          curl -sL https://firebase.tools | bash

          # App ID from GoogleService-Info.plist
          GOOGLE_APP_ID=1:873990114327:ios:40d53aa2956a563d09e052

          # Set env for Firebase tools authentication
          export GOOGLE_APPLICATION_CREDENTIALS=${RUNNER_TEMP}/google-service-account.json

          # Import Google service account credentials from the secrets
          echo -n "${GOOGLE_APPLICATION_CREDENTIALS_BASE64}" | base64 --decode --output ${GOOGLE_APPLICATION_CREDENTIALS}

          # Upload to Firebase App Distribution
          firebase appdistribution:distribute ./build/App.ipa \
            --app ${GOOGLE_APP_ID} \
            --testers "thealeos@gmail.com"
